@article{warren2011,
    author = {Axelrod, Warren},
    year = {2011},
    month = {03},
    pages = {17-21},
    title = {The need for functional security testing},
    volume = {24}
}

@article{bsiStudy2020,
    author = {Federal Office for Information Security},
    title = {A Penetration Testing Model},
    url = {https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/Studies/Penetration/penetration_pdf.pdf?__blob=publicationFile&v=1},
    urldate = {2020-03-02},
    pages = {46-50}
}

@book{mcgraw2006,
    author = {McGraw, Gary}, 
    title = {Software Security: Building Security In}, 
    year = {2006}, 
    isbn = {0321356705}, 
    publisher = {Addison-Wesley Professional} 
}

@article{bacuidoYuanChuJones2011,
    author = {Bacudio, Aileen and Yuan, Xiaohong and Chu, Bei and Jones, Monique},
    year = {2011},
    month = {11},
    pages = {19-38},
    title = {An Overview of Penetration Testing},
    volume = {3},
    journal = {International Journal of Network Security & Its Applications},
    doi = {10.5121/ijnsa.2011.3602}
}

@article{asvs4.0,
    author = {Cuthbert, Daniel and Manico, Jim},
    year = {2019},
    pages = {9-11},
    month = {3},
    title = {Application Security Verification Standard 4.0},
    volume = {3}
}

@article{bsiC5,
    author = {Federal Office for Information Security},
    year = {2017},
    month = {9},
    doi = {BSI-Cloud17/202e},
    title = {Cloud Computing Compliance Controls Catalogue (C5)},
    volume = {3}
}

@online{mohanty2020,
    title = {Demystifying Penetration Testing HackingSpirits},
    author = {Mohanty, D.},
    url = {http://www.infosecwriters.com/text_resources/pdf/pen_test2.pdf},
    urldate = {2020-03-02}
}

@online{compliance2020,
    title = {Cambridge Definition of Compliance},
    author = {},
    url = {https://dictionary.cambridge.org/dictionary/english/compliance},
    urldate = {2020-03-02}
}

@online{passi2018,
    title = {Penetration Testing: Step-by-Step Guide, Stages, Methods and Application},
    author = {Harpreet, Passi},
    year = {2018},
    month = {6},
    url = {https://www.greycampus.com/blog/information-security/penetration-testing-step-by-step-guide-stages-methods-and-application},
    urldate = {2020-03-02}
}

@online{alicloud2018,
    title = {DevSecOps Best Practices on Alibaba Cloud – Building an E-Commerce Application},
    author = {Anand, V},
    year = {2018},
    month = {7},
    url = {https://www.alibabacloud.com/blog/devsecops-best-practices-on-alibaba-cloud-building-an-e-commerce-application_593846},
    urldate = {2020-03-02}
}

@online{secrat2020,
    title = {SecurityRAT (“Security Requirement Automation Tool”)},
    author = {Kefer, Daniel and Reuter, Rene},
    year = {2020},
    month = {1},
    url = {https://securityrat.github.io/},
    urldate = {2020-03-02}
}

@online{owasp2020,
    title = {Homepage of the Open Web Application Security Project},
    author = {OWASP Foundation, Inc.},
    url = {https://www.owasp.org},
    urldate = {2020-03-02}
}

@online{owaspTopTen2020,
    title = {Top 10 Web Application Security Risks},
    author = {mikemccamon and hblankenship and OWASPFoundation},
    url = {https://github.com/OWASP/www-project-top-ten/blob/master/index.md},
    urldate = {2020-03-02}
}

@online{owaspAsvs2020,
    title = {OWASP Application Security Verification Standard},
    author = {Cuthbert, Daniel and Manico, Jim},
    url = {https://owasp.org/www-project-application-security-verification-standard/},
    urldate = {2020-03-02}
}

@online{gitGuardian2020,
    title = {GitGuardian - Modern monitoring & security},
    author = {Fourrier, Eric},
    url = {https://www.gitguardian.com},
    urldate = {2020-03-02}
}

@online{owaspStaticTools2020,
    title = {OWASP - Source Code Analysis Tools},
    author = {OWASP Foundation, Inc.},
    year = {2018},
    month = {1},
    day = {17},
    url = {https://owasp.org/www-community/Source_Code_Analysis_Tools},
    urldate = {2020-03-02}
}

@online{sypolt2018,
    title = {The Challenges and Benefits of Model-Based Testing},
    author = {Sypolt, Greg},
    year = {2018},
    month = {1},
    day = {17},
    url = {https://saucelabs.com/blog/the-challenges-and-benefits-of-model-based-testing},
    urldate = {2020-03-02}
}

@online{semmle2020,
    title = {The Challenges and Benefits of Model-Based Testing},
    author = {Sypolt, Greg},
    url = {https://semmle.com/codeql},
    urldate = {2020-03-02}
}

@online{dataBreaches2019,
    title = {All Data Breaches in 2019 & 2020 – An Alarming Timeline},
    year = {2020},
    month = {3},
    day = {5},
    url = {https://selfkey.org/data-breaches-in-2019/},
    urldate = {2020-03-05}
}

@online{vijayan2019,
    title = {Why automating your security testing is mission-critical},
    author = {Vijayan, Jaikumar},
    url = {https://techbeacon.com/security/why-automating-your-security-testing-mission-critical},
    urldate = {2020-03-05}
}

@online{portswigger2020,
    title = {Automated penetration testing software},
    url = {https://portswigger.net/testers/automated-penetration-testing},
    urldate = {2020-03-05}
}

@online{awsIac2017,
    title = {Infrastructure as Code},
    author = {Amazon Web Services, Inc.},
    url = {https://d0.awsstatic.com/whitepapers/DevOps/infrastructure-as-code.pdf},
    year = {2017},
    month = {7},
    urldate = {2020-03-05}
}

@online{awsCloudFormation2010,
    title = {AWS CloudFormation - User Guide},
    author = {Amazon Web Services, Inc.},
    url = {https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-ug.pdf#aws-template-resource-type-ref},
    year = {2010},
    month = {5},
    day = {15},
    urldate = {2020-03-05}
}

@online{azureResourceTemp2020,
    title = {Azure Resource Manager templates overview},
    author = {FitzMacken, Tom and Gao, Jonathan},
    url = {https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/overview},
    year = {2020},
    month = {2},
    day = {1},
    urldate = {2020-03-05}
}

@online{secCat2020,
    title = {PoC implementation of SecurityCAT},
    author = {Kefer, Daniel},
    url = {https://github.com/SecurityRAT/SecurityCAT-PoC},
    urldate = {2020-03-05}
}

@online{zapProxy,
    title = {OWASP ZAP - Getting Started},
    url = {https://www.zaproxy.org/getting-started/},
    urldate = {2020-03-05}
}

@online{burpSuite,
    title = {The Burp Suite family},
    url = {https://portswigger.net/burp},
    urldate = {2020-03-05}
}

@online{metasploit,
    title = {metasploit - The world’s most used penetration testing framework},
    url = {https://www.metasploit.com},
    urldate = {2020-03-05}
}

@online{pacu,
    title = {Pacu - The AWS exploitation framework, designed for testing the security of Amazon Web Services environments},
    url = {https://github.com/RhinoSecurityLabs/pacu},
    urldate = {2020-03-05}
}

@online{httpRFC,
    title = {RFC 2616 Fielding, et al. 15. Security Considerations},
    url = {https://www.w3.org/Protocols/rfc2616/rfc2616-sec15.html},
    urldate = {2020-03-05}
}

@online{stackoverflowTrigger,
    title = {Trigger single Policy via REST},
    author = {Nieva, Kemley - PM Microsoft Azure Policy and Governance},
    url = {https://stackoverflow.com/questions/59734350/trigger-single-policy-via-rest/59758044?noredirect=1#comment105831924_59758044},
    urldate = {2020-03-05}
}

@INPROCEEDINGS{stefinko2016, 
    author={Y. {Stefinko} and A. {Piskozub} and R. {Banakh}}, 
    booktitle={2016 13th International Conference on Modern Problems of Radio Engineering, Telecommunications and Computer Science (TCSET)}, 
    title={Manual and automated penetration testing. Benefits and drawbacks. Modern tendency}, 
    year={2016}, 
    pages={488-491}, 
    keywords={data protection;program testing;security of data;Unix;automated penetration testing;manual penetration testing;information security;proactive defence;information systems protection;operational systems;UNIX core;Decision support systems;Testing;Security;Planning;Erbium;Documentation;Manuals;Penetration Testing;Information Security;Proactive Defence;Ethical Hacker;Exploitation;Hacking;Data Breach;Cyber Attack;Metasploit;Python}, 
    doi={10.1109/TCSET.2016.7452095}, 
    month={Feb},
}

@InProceedings{wotawa2014,
    author="Wotawa, Franz
    and Bozic, Josip",
    editor="Merayo, Mercedes G.
    and de Oca, Edgardo Montes",
    title="Plan It! Automated Security Testing Based on Planning",
    booktitle="Testing Software and Systems",
    year="2014",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="48--62",
    abstract="Testing of web applications for common vulnerabilities still represents a major challenge in the area of security testing. The objective here is not necessarily to find new vulnerabilities but to ensure that the web application handles well-known attack patterns in a reliable way. Previously developed methods based on formalizing attack patterns contribute to the underlying challenge. However, the adaptation of the attack models is not easy and requires substantial effort. In order to make modeling easier we suggest representing attacks as a sequence of known actions that have to be carried out in order to be successful. Each action has some pre conditions and some effects. Hence, we are able to represent testing in this context as a planning problem where the goal is to break the application under test. In the paper, we discuss the proposed planning based testing approach, introduce the underlying concepts and definitions, and present some experimental results obtained from an implementation.",
    isbn="978-3-662-44857-1"
}

@inproceedings{torxAMBT2003,
    title = "TorX: Automated Model-Based Testing",
    abstract = "Systematic testing is very important for assessing and improving the quality of software systems. Yet, testing turns out to be expensive, laborious, time-consuming and error-prone. The Dutch research and development project C{\^o}te de Resyste worked on methods, techniques and tools for automating specification based testing using formal methods. The main achievement of the project is a test tool, baptized TorX, which integrates automatic test generation, test execution, and test analysis in an on-the-fly manner. On the one hand, TorX is based on well-defined theory, viz. the ioco-test theory, which has its roots in the theory of testing- and refusal-equivalences for transition systems. On the other hand, the applicability of TorX has been demonstrated by testing several academic and industrial case studies. This paper summarizes the main results of the project C{\^o}te de Resyste.",
    keywords = "FMT-TESTING, METIS-233612, EWI-9475, IR-66990",
    author = "G.J. Tretmans and Hendrik Brinksma",
    year = "2003",
    month = "12",
    language = "Undefined",
    isbn = "not assigned",
    pages = "31--43",
    editor = "A. Hartman and K. Dussa-Ziegler",
    booktitle = "First European Conference on Model-Driven Software Engineering",
}

@inproceedings{mbst2012,
  author    = {Ina Schieferdecker and
               Juergen Grossmann and
               Martin A. Schneider},
  editor    = {Alexander K. Petrenko and
               Holger Schlingloff},
  title     = {Model-Based Security Testing},
  booktitle = {Proceedings 7th Workshop on Model-Based Testing, {MBT} 2012, Tallinn,
               Estonia, 25 March 2012},
  series    = {{EPTCS}},
  volume    = {80},
  pages     = {1--12},
  year      = {2012},
  url       = {https://doi.org/10.4204/EPTCS.80.1},
  doi       = {10.4204/EPTCS.80.1},
  timestamp = {Wed, 12 Sep 2018 01:05:16 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1202-6118.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@INPROCEEDINGS{mbsvt2007,
    author={P. A. {Pari Salas} and P. {Krishnan} and K. J. {Ross}},
    booktitle={2007 Australian Software Engineering Conference (ASWEC'07)},
    title={Model-Based Security Vulnerability Testing},
    year={2007},
    volume={},
    number={},
    pages={284-296},
    keywords={formal specification;program testing;security of data;model-based security vulnerability testing;formal specification;automatic test case generation;Security;System testing;Australia;Automatic testing;Databases;Application software;Context modeling;Engines;Software testing;Bonding},
    doi={10.1109/ASWEC.2007.31},
    ISSN={1530-0803},
    month={April},
}

@inproceedings{mbvtWA2013,
    author = {Lebeau, Franck and Legeard, Bruno and Peureux, Fabien and Vernotte, Alexandre},
    year = {2013},
    month = {03},
    pages = {445-452},
    title = {Model-Based Vulnerability Testing for Web Applications},
    isbn = {978-1-4799-1324-4},
    journal = {Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2013},
    doi = {10.1109/ICSTW.2013.58}
}

@inbook{secTestingSurvey2016,
    author = {Felderer, Michael and Büchler, Matthias and Johns, Martin and Brucker, Achim and Breu, Ruth and Pretschner, Alexander},
    year = {2016},
    month = {03},
    pages = {1-51},
    title = {Security Testing: A Survey},
    doi = {10.1016/bs.adcom.2015.11.003}
}

@inproceedings{autoPentestOverview2018,
    author = {Abu-Dabaseh, Farah and Alshammari, Esraa},
    year = {2018},
    title = {Automated Penetration Testing: An Overview},
    journal = {NATL, CSEA, DMDBS, Fuzzy, ITCON, NSEC, COMIT},
    doi = {10.5121/csit.2018.80610}
}

@INPROCEEDINGS{cloudSec2017, 
    author={C. {Tunc} and S. {Hariri} and M. {Merzouki} and C. {Mahmoudi} and F. J. d. {Vaulx} and J. {Chbili} and R. {Bohn} and A. {Battou}}, 
    booktitle={2017 IEEE 2nd International Workshops on Foundations and Applications of Self* Systems (FAS*W)}, 
    title={Cloud Security Automation Framework}, 
    year={2017}, 
    volume={}, 
    number={}, 
    pages={307-312}, 
    keywords={cloud computing;computer network security;invasive software;cloud environment;NIST SP 800-53 security controls;Cloud Service Providers;Cloud Service Consumers;cloud system resources;security requirements;system-at-hand;cloud security automation framework;DoS-DDoS attacks;CSP;CSC;ransomware attacks;utility paradigm;data breaches;Cloud computing;Security;NIST;Taxonomy;Automation;Computational modeling;cloud computing;cybersecurity;automation}, 
    doi={10.1109/FAS-W.2017.164}, 
    ISSN={null}, 
    month={Sep.},
}

@inproceedings{androidTesting2012,
    author = {Malek, Sam and Esfahani, Naeem and Kacem, Thabet and Mahmood, Riyadh and Mirzaei, Nariman and Stavrou, Angelos},
    year = {2012},
    month = {06},
    pages = {35-36},
    title = {A Framework for Automated Security Testing of Android Applications on the Cloud},
    isbn = {978-1-4673-2670-4},
    doi = {10.1109/SERE-C.2012.39}
}

@inproceedings{automatedPentesting2011,
    author = {Samant, Neha},
    year = {2011},
    title = {AUTOMATED PENETRATION TESTING},
    doi = {https://doi.org/10.31979/etd.fxpj-pt6k }
}

@INPROCEEDINGS{javaffColes,
	author = "A. I. Coles and M. Fox and D. Long and A. J. Smith",
	title = "Teaching Forward-Chaining Planning with {JavaFF}",
	booktitle = "Colloquium on {AI} Education, Twenty-Third {AAAI} Conference on Artificial Intelligence",
	year = "2008",
	month = "July",
}

@article{bannerman2009,
    author = {Bannerman, Paul},
    year = {2009},
    month = {05},
    pages = {3-8},
    title = {Software Development Governance: A Meta-management Perspective},
    volume = {0},
    isbn = {978-1-4244-3736-7},
    journal = {Software Development Governance, ICSE Workshop on},
    doi = {10.1109/SDG.2009.5071329}
}